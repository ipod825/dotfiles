-- Plug("mhartington/formatter.nvim", {
-- 	config = function()
-- 		require("formatter").setup({
-- 			logging = true,
-- 			filetype = {
-- 				python = { require("formatter.filetypes.python").isort },
-- 				lua = {
-- 					require("formatter.filetypes.lua").stylua,
-- 				},
-- 				json = {
-- 					require("formatter.filetypes.json").jq,
-- 				},
-- 				["*"] = {
-- 					require("formatter.filetypes.any").remove_trailing_whitespace,
-- 				},
-- 			},
-- 		})
-- 		vim.api.nvim_create_autocmd("BufwritePost", {
-- 			group = vim.api.nvim_create_augroup("FORMATTER", {}),
-- 			callback = function()
-- 				vim.cmd("silent! FormatWrite")
-- 			end,
-- 		})
-- 	end,
-- })
-- Plug("lukas-reineke/lsp-format.nvim", {
-- 	config = function()
-- 		require("lsp-format").setup({
-- 			lua = {
-- 				exclude = { "sumneko_lua" },
-- 			},
-- 		})
-- 	end,
-- })

-- Plug("hrsh7th/cmp-vsnip", { disable = true })
-- Plug("hrsh7th/vim-vsnip-integ", { disable = true })
-- Plug("hrsh7th/vim-vsnip", {
-- 	disable = true,
-- 	setup = function()
-- 		vim.g.vsnip_snippet_dir = vim.fn.stdpath("config") .. "/snippets/vsnip"
-- 	end,
-- 	config = function()
-- 		map(
-- 			"i",
-- 			"<tab>",
-- 			'vsnip#available(1) ? "<Plug>(vsnip-expand-or-jump)" : "<tab>"',
-- 			{ expr = true, remap = true }
-- 		)
-- 		map("i", "<s-tab>", 'vsnip#jumpable(-1) ? "<Plug>(vsnip-jump-prev)" : "<s-tab>"', { expr = true, remap = true })
-- 		map("s", "<tab>", 'vsnip#jumpable(1) ? "<Plug>(vsnip-jump-next)" : "<tab>"', { expr = true, remap = true })
-- 		map("s", "<s-tab>", 'vsnip#jumpable(-1) ? "<Plug>(vsnip-jump-prev)" : "<s-tab>"', { expr = true, remap = true })
-- 	end,
-- })
-- Plug("p00f/nvim-ts-rainbow", {
-- 	config = function()
-- 		local color = require("colorscheme").color
-- 		require("colorscheme").add_plug_hl({
-- 			rainbowcol1 = { fg = color.red },
-- 			rainbowcol2 = { fg = color.green },
-- 			rainbowcol3 = { fg = color.blue },
-- 			rainbowcol4 = { fg = color.yellow },
-- 			rainbowcol5 = { fg = color.cyan },
-- 			rainbowcol6 = { fg = color.magenta },
-- 			rainbowcol7 = { fg = color.orange },
-- 		})
-- 		require("nvim-treesitter.configs").setup({
-- 			rainbow = {
-- 				enable = true,
-- 				disable = {},
-- 				-- Also highlight non-bracket delimiters like html tags, boolean or table: lang -> boolean
-- 				extended_mode = true,
-- 				-- Do not enable for files with more than n lines, int
-- 				max_file_lines = nil,
-- 			},
-- 		})
-- 	end,
-- })
-- Plug("lewis6991/spellsitter.nvim", {
-- 	config = function()
-- 		local filetypes = {
-- 			"cpp",
-- 			"java",
-- 			"lua",
-- 			"python",
-- 			"markdown",
-- 			"tex",
-- 			"asciidoc",
-- 			"gitcommit",
-- 			"hgcommit",
-- 			"piccolo",
-- 			"proto",
-- 		}
-- 		vim.api.nvim_create_autocmd("Filetype", {
-- 			group = vim.api.nvim_create_augroup("SPELLSITTER", {}),
-- 			pattern = filetypes,
-- 			callback = function()
-- 				vim.cmd("setlocal spell")
-- 				vim.bo.spellfile = vim.fn.stdpath("config") .. "/spell/spellsitter.en.utf-8.add"
-- 			end,
-- 		})
-- 		require("spellsitter").setup({ enable = true })
-- 	end,
-- })
